local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\93\74","\126\115\100\167\164"),function(v42)if (v9(v42,5 -3 )==79) then v30=v8(v11(v42,1,2 -1 ));return "";else local v82=v10(v8(v42,16));if v30 then local v91=0;local v92;while true do if (v91==0) then v92=v13(v82,v30);v30=nil;v91=1;end if (v91==1) then return v92;end end else return v82;end end end);local function v31(v43,v44,v45)if v45 then local v83=0;local v84;while true do if (0==v83) then v84=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v84-(v84%1) ;end end else local v85=2^(v44-1) ;return (((v43%(v85 + v85))>=v85) and 1) or 0 ;end end local function v32()local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + (1 -0) ;v46=1;end end end local function v33()local v48=0;local v49;local v50;while true do if (1==v48) then return (v50 * 256) + v49 ;end if (v48==0) then v49,v50=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v48=1;end end end local function v34()local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==0) then v52,v53,v54,v55=v9(v27,v29,v29 + 3 );v29=v29 + (10 -6) ;v51=1;end if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end end end local function v35()local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==0) then v57=v34();v58=v34();v56=1;end if (1==v56) then v59=1;v60=(v31(v58,1,639 -(555 + 64) ) * (2^32)) + v57 ;v56=2;end if (v56==3) then if (v61==0) then if (v60==0) then return v62 * 0 ;else local v118=0;while true do if (v118==0) then v61=1;v59=0;break;end end end elseif (v61==2047) then return ((v60==0) and (v62 * (1/0))) or (v62 * NaN) ;end return v16(v62,v61-(1954 -(857 + 74)) ) * (v59 + (v60/(2^52))) ;end if (v56==2) then v61=v31(v58,21,31);v62=((v31(v58,32)==1) and  -1) or 1 ;v56=3;end end end local function v36(v63)local v64;if  not v63 then local v86=0;while true do if (v86==0) then v63=v34();if (v63==0) then return "";end break;end end end v64=v11(v27,v29,(v29 + v63) -(569 -(367 + 201)) );v29=v29 + v63 ;local v65={};for v80=1, #v64 do v65[v80]=v10(v9(v11(v64,v80,v80)));end return v14(v65);end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v66=0;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (3==v66) then for v93=1,v34() do v68[v93-1 ]=v39();end return v70;end if (v66==1) then v70={v67,v68,nil,v69};v71=v34();v72={};v66=2;end if (v66==0) then v67={};v68={};v69={};v66=1;end if (v66==2) then for v95=1,v71 do local v96=0;local v97;local v98;while true do if (v96==0) then v97=v32();v98=nil;v96=1;end if (v96==1) then if (v97==1) then v98=v32()~=(927 -(214 + 713)) ;elseif (v97==2) then v98=v35();elseif (v97==3) then v98=v36();end v72[v95]=v98;break;end end end v70[3]=v32();for v99=1,v34() do local v100=0;local v101;while true do if (v100==0) then v101=v32();if (v31(v101,1 + 0 ,1)==0) then local v126=0;local v127;local v128;local v129;while true do if (v126==0) then v127=v31(v101,2,3);v128=v31(v101,4,6);v126=1;end if (v126==1) then v129={v33(),v33(),nil,nil};if (v127==(0 + 0)) then local v131=0;while true do if (0==v131) then v129[880 -(282 + 595) ]=v33();v129[4]=v33();break;end end elseif (v127==1) then v129[3]=v34();elseif (v127==2) then v129[3]=v34() -(2^16) ;elseif (v127==3) then v129[3]=v34() -((1639 -(1523 + 114))^16) ;v129[4 + 0 ]=v33();end v126=2;end if (v126==3) then if (v31(v128,3,3)==1) then v129[4]=v72[v129[4]];end v67[v99]=v129;break;end if (v126==2) then if (v31(v128,1,1 -0 )==1) then v129[1067 -(68 + 997) ]=v72[v129[1272 -(226 + 1044) ]];end if (v31(v128,2,2)==(4 -3)) then v129[3]=v72[v129[3]];end v126=3;end end end break;end end end v66=3;end end end local function v40(v73,v74,v75)local v76=0;local v77;local v78;local v79;while true do if (1==v76) then v79=v73[3];return function(...)local v102=v77;local v103=v78;local v104=v79;local v105=v38;local v106=1;local v107= -1;local v108={};local v109={...};local v110=v20("#",...) -1 ;local v111={};local v112={};for v116=0,v110 do if (v116>=v104) then v108[v116-v104 ]=v109[v116 + 1 ];else v112[v116]=v109[v116 + 1 ];end end local v113=(v110-v104) + 1 ;local v114;local v115;while true do local v117=0;while true do if (v117==0) then v114=v102[v106];v115=v114[1];v117=1;end if (v117==1) then if (v115<=48) then if (v115<=23) then if (v115<=(128 -(32 + 85))) then if (v115<=(5 + 0)) then if (v115<=2) then if (v115<=0) then v112[v114[2]]=v112[v114[3]] -v112[v114[4]] ;elseif (v115==1) then local v193=v103[v114[3]];local v194;local v195={};v194=v18({},{[v7("\100\224\32\142\51\94\199","\87\59\191\73\224")]=function(v320,v321)local v322=0;local v323;while true do if (0==v322) then v323=v195[v321];return v323[1][v323[1 + 1 ]];end end end,[v7("\246\216\12\69\222\238\12\68\204\255","\32\169\135\98")]=function(v324,v325,v326)local v327=v195[v325];v327[958 -(892 + 65) ][v327[2]]=v326;end});for v329=1,v114[4] do local v330=0;local v331;while true do if (v330==0) then v106=v106 + 1 ;v331=v102[v106];v330=1;end if (v330==1) then if (v331[1]==87) then v195[v329-1 ]={v112,v331[3]};else v195[v329-(2 -1) ]={v74,v331[3]};end v111[ #v111 + 1 ]=v195;break;end end end v112[v114[2]]=v40(v193,v194,v75);else v112[v114[2]]=v112[v114[3]] * v112[v114[4]] ;end elseif (v115<=3) then local v145=0;local v146;local v147;while true do if (v145==1) then for v364=v146 + 1 ,v107 do v15(v147,v112[v364]);end break;end if (v145==0) then v146=v114[2];v147=v112[v146];v145=1;end end elseif (v115==4) then if (v114[2]==v112[v114[6 -2 ]]) then v106=v106 + (1 -0) ;else v106=v114[3];end elseif v112[v114[2]] then v106=v106 + 1 ;else v106=v114[3];end elseif (v115<=8) then if (v115<=6) then v112[v114[352 -(87 + 263) ]]=v40(v103[v114[183 -(67 + 113) ]],nil,v75);elseif (v115>(6 + 1)) then v112[v114[4 -2 ]]=v112[v114[3]]%v114[4] ;else v74[v114[3]]=v112[v114[2]];end elseif (v115<=9) then v112[v114[2]]=v114[3] + v112[v114[4]] ;elseif (v115>10) then local v201=0;local v202;local v203;while true do if (v201==0) then v202=v114[2];v203={};v201=1;end if (v201==1) then for v417=1 + 0 , #v111 do local v418=0;local v419;while true do if (0==v418) then v419=v111[v417];for v457=0, #v419 do local v458=0;local v459;local v460;local v461;while true do if (0==v458) then v459=v419[v457];v460=v459[1];v458=1;end if (1==v458) then v461=v459[2];if ((v460==v112) and (v461>=v202)) then v203[v461]=v460[v461];v459[1]=v203;end break;end end end break;end end end break;end end else do return v112[v114[2]]();end end elseif (v115<=17) then if (v115<=14) then if (v115<=12) then v112[v114[7 -5 ]]=v40(v103[v114[3]],nil,v75);elseif (v115==13) then v106=v114[3];else local v205=0;local v206;local v207;while true do if (v205==0) then v206=v114[2];v207=v112[v206];v205=1;end if (v205==1) then for v420=v206 + 1 ,v107 do v15(v207,v112[v420]);end break;end end end elseif (v115<=(967 -(802 + 150))) then local v151=v114[5 -3 ];v112[v151]=v112[v151](v112[v151 + 1 ]);elseif (v115==16) then if  not v112[v114[3 -1 ]] then v106=v106 + 1 ;else v106=v114[3];end elseif v112[v114[2]] then v106=v106 + 1 ;else v106=v114[3];end elseif (v115<=20) then if (v115<=18) then v112[v114[2]]= not v112[v114[3 + 0 ]];elseif (v115==19) then local v208=0;local v209;local v210;local v211;while true do if (v208==2) then if (v210>0) then if (v211<=v112[v209 + 1 ]) then v106=v114[3];v112[v209 + 3 ]=v211;end elseif (v211>=v112[v209 + 1 ]) then v106=v114[3];v112[v209 + 3 ]=v211;end break;end if (v208==0) then v209=v114[2];v210=v112[v209 + 2 ];v208=1;end if (v208==1) then v211=v112[v209] + v210 ;v112[v209]=v211;v208=2;end end else v74[v114[3]]=v112[v114[2]];end elseif (v115<=21) then local v154=0;local v155;while true do if (v154==0) then v155=v114[999 -(915 + 82) ];v112[v155]=v112[v155]();break;end end elseif (v115>22) then v112[v114[2]]=v112[v114[3]] * v112[v114[4]] ;else v112[v114[2]]=v114[8 -5 ];end elseif (v115<=35) then if (v115<=29) then if (v115<=26) then if (v115<=24) then v112[v114[2]]={};elseif (v115==25) then local v217=v114[2];v112[v217](v21(v112,v217 + 1 ,v107));else for v336=v114[2],v114[3] do v112[v336]=nil;end end elseif (v115<=(16 + 11)) then local v157=0;local v158;while true do if (v157==0) then v158=v114[2 -0 ];v112[v158](v21(v112,v158 + 1 ,v107));break;end end elseif (v115==28) then local v218=0;local v219;local v220;local v221;local v222;while true do if (v218==2) then for v421=v219,v107 do v222=v222 + 1 ;v112[v421]=v220[v222];end break;end if (0==v218) then v219=v114[2];v220,v221=v105(v112[v219](v21(v112,v219 + 1 ,v107)));v218=1;end if (v218==1) then v107=(v221 + v219) -1 ;v222=0;v218=2;end end elseif  not v112[v114[2]] then v106=v106 + 1 ;else v106=v114[1190 -(1069 + 118) ];end elseif (v115<=32) then if (v115<=30) then v112[v114[4 -2 ]][v114[6 -3 ]]=v114[4];elseif (v115>31) then v112[v114[1 + 1 ]][v114[3]]=v112[v114[4]];else v112[v114[2]][v112[v114[3]]]=v114[4];end elseif (v115<=33) then v112[v114[2]]= #v112[v114[3]];elseif (v115==34) then v112[v114[2]][v112[v114[3]]]=v114[4];else local v229=0;local v230;local v231;local v232;while true do if (v229==1) then v232=v112[v230 + 2 ];if (v232>0) then if (v231>v112[v230 + (1 -0) ]) then v106=v114[3];else v112[v230 + 3 ]=v231;end elseif (v231<v112[v230 + 1 ]) then v106=v114[3];else v112[v230 + 3 ]=v231;end break;end if (v229==0) then v230=v114[2];v231=v112[v230];v229=1;end end end elseif (v115<=41) then if (v115<=38) then if (v115<=36) then local v162=v114[2];local v163=v112[v162];local v164=v112[v162 + 2 ];if (v164>0) then if (v163>v112[v162 + 1 ]) then v106=v114[3 + 0 ];else v112[v162 + 3 ]=v163;end elseif (v163<v112[v162 + 1 ]) then v106=v114[3];else v112[v162 + 3 ]=v163;end elseif (v115==37) then local v233=v103[v114[3]];local v234;local v235={};v234=v18({},{[v7("\247\244\126\42\80\248\213","\173\168\171\23\68\52\157")]=function(v339,v340)local v341=0;local v342;while true do if (v341==0) then v342=v235[v340];return v342[1][v342[793 -(368 + 423) ]];end end end,[v7("\184\203\127\240\200\142\250\117\240\199","\191\231\148\17\149")]=function(v343,v344,v345)local v346=v235[v344];v346[1][v346[2]]=v345;end});for v348=1,v114[4] do v106=v106 + 1 ;local v349=v102[v106];if (v349[1]==87) then v235[v348-1 ]={v112,v349[3]};else v235[v348-(3 -2) ]={v74,v349[3]};end v111[ #v111 + 1 ]=v235;end v112[v114[2]]=v40(v233,v234,v75);else v112[v114[2]]();end elseif (v115<=39) then local v165=0;local v166;while true do if (0==v165) then v166=v114[2];v112[v166]=v112[v166]();break;end end elseif (v115>40) then if (v112[v114[2]]==v114[4]) then v106=v106 + 1 ;else v106=v114[21 -(10 + 8) ];end else v112[v114[2]]=v112[v114[3]] -v112[v114[4]] ;end elseif (v115<=44) then if (v115<=42) then v112[v114[2]]();elseif (v115==(165 -122)) then v112[v114[444 -(416 + 26) ]]=v114[3] + v112[v114[4]] ;else local v239=0;local v240;local v241;local v242;while true do if (v239==1) then v242=v114[3];for v425=1,v242 do v241[v425]=v112[v240 + v425 ];end break;end if (v239==0) then v240=v114[2];v241=v112[v240];v239=1;end end end elseif (v115<=46) then if (v115>45) then v112[v114[2]][v114[9 -6 ]]=v112[v114[4]];else local v245=v114[2];local v246=v112[v114[3]];v112[v245 + 1 ]=v246;v112[v245]=v246[v114[4]];end elseif (v115==(21 + 26)) then v112[v114[3 -1 ]]=v112[v114[3]];else v112[v114[2]]=v112[v114[3]] + v114[4] ;end elseif (v115<=73) then if (v115<=(498 -(145 + 293))) then if (v115<=54) then if (v115<=51) then if (v115<=49) then for v191=v114[2],v114[3] do v112[v191]=nil;end elseif (v115==50) then do return;end else v112[v114[432 -(44 + 386) ]]=v114[3];end elseif (v115<=52) then local v167=0;local v168;local v169;while true do if (v167==0) then v168=v114[2];v169={};v167=1;end if (v167==1) then for v375=1, #v111 do local v376=v111[v375];for v400=0, #v376 do local v401=v376[v400];local v402=v401[1];local v403=v401[2];if ((v402==v112) and (v403>=v168)) then v169[v403]=v402[v403];v401[1487 -(998 + 488) ]=v169;end end end break;end end elseif (v115>53) then local v255=v114[2];local v256,v257=v105(v112[v255](v112[v255 + 1 + 0 ]));v107=(v257 + v255) -1 ;local v258=0 + 0 ;for v354=v255,v107 do v258=v258 + 1 ;v112[v354]=v256[v258];end else v112[v114[2]][v112[v114[3]]]=v112[v114[4]];end elseif (v115<=57) then if (v115<=55) then v112[v114[2]]=v112[v114[775 -(201 + 571) ]]%v112[v114[4]] ;elseif (v115==56) then local v261=v114[2];local v262=v112[v114[3]];v112[v261 + 1 ]=v262;v112[v261]=v262[v114[1142 -(116 + 1022) ]];else v112[v114[8 -6 ]]= not v112[v114[2 + 1 ]];end elseif (v115<=58) then v112[v114[2]]=v112[v114[3]][v114[14 -10 ]];elseif (v115==59) then v112[v114[2]]=v112[v114[3]]%v114[4] ;else local v268=v114[2];do return v21(v112,v268,v107);end end elseif (v115<=66) then if (v115<=63) then if (v115<=61) then v112[v114[2]]={};elseif (v115==62) then v112[v114[2]][v114[3]]=v114[4];else v112[v114[2]]=v114[3]~=0 ;end elseif (v115<=64) then v112[v114[2]]=v112[v114[3]] + v114[4] ;elseif (v115==65) then local v272=0;local v273;local v274;local v275;local v276;while true do if (0==v272) then v273=v114[2];v274,v275=v105(v112[v273](v21(v112,v273 + 1 ,v107)));v272=1;end if (v272==2) then for v428=v273,v107 do v276=v276 + (3 -2) ;v112[v428]=v274[v276];end break;end if (v272==1) then v107=(v275 + v273) -1 ;v276=0;v272=2;end end else local v277=v114[2];do return v112[v277](v21(v112,v277 + 1 ,v114[3]));end end elseif (v115<=69) then if (v115<=67) then local v175=0;local v176;local v177;local v178;local v179;while true do if (v175==1) then v107=(v178 + v176) -1 ;v179=0;v175=2;end if (v175==0) then v176=v114[2];v177,v178=v105(v112[v176](v112[v176 + 1 ]));v175=1;end if (2==v175) then for v377=v176,v107 do local v378=0;while true do if (v378==0) then v179=v179 + 1 ;v112[v377]=v177[v179];break;end end end break;end end elseif (v115==68) then v112[v114[2]][v112[v114[3]]]=v112[v114[4]];else do return v112[v114[2]]();end end elseif (v115<=71) then if (v115==70) then local v280=0;local v281;local v282;local v283;local v284;while true do if (v280==2) then for v431=v281,v107 do local v432=0;while true do if (v432==0) then v284=v284 + 1 ;v112[v431]=v282[v284];break;end end end break;end if (v280==1) then v107=(v283 + v281) -1 ;v284=0;v280=2;end if (v280==0) then v281=v114[861 -(814 + 45) ];v282,v283=v105(v112[v281](v21(v112,v281 + 1 ,v114[3])));v280=1;end end else v112[v114[2]]=v74[v114[3]];end elseif (v115==(177 -105)) then if (v114[2]==v112[v114[4]]) then v106=v106 + 1 ;else v106=v114[3];end else v106=v114[3];end elseif (v115<=85) then if (v115<=79) then if (v115<=76) then if (v115<=74) then local v180=v114[2];v112[v180](v112[v180 + 1 + 0 ]);elseif (v115==75) then v112[v114[2]]=v112[v114[3]]%v112[v114[4]] ;elseif (v112[v114[2]]==v114[4]) then v106=v106 + 1 + 0 ;else v106=v114[888 -(261 + 624) ];end elseif (v115<=77) then v112[v114[2]]=v114[3]~=0 ;elseif (v115==78) then local v289=v114[2];local v290=v112[v289];local v291=v114[3];for v358=1,v291 do v290[v358]=v112[v289 + v358 ];end else local v292=v114[2];local v293=v112[v292];for v361=v292 + 1 ,v114[3] do v15(v293,v112[v361]);end end elseif (v115<=(145 -63)) then if (v115<=80) then local v182=v114[2];local v183=v112[v182 + 2 ];local v184=v112[v182] + v183 ;v112[v182]=v184;if (v183>0) then if (v184<=v112[v182 + 1 ]) then local v381=0;while true do if (0==v381) then v106=v114[3];v112[v182 + 3 ]=v184;break;end end end elseif (v184>=v112[v182 + 1 ]) then v106=v114[3];v112[v182 + 3 ]=v184;end elseif (v115>81) then v112[v114[2]]=v74[v114[3]];else local v296=0;local v297;while true do if (0==v296) then v297=v114[2];v112[v297]=v112[v297](v21(v112,v297 + 1 ,v114[3]));break;end end end elseif (v115<=83) then local v186=v114[2];v112[v186]=v112[v186](v112[v186 + (1081 -(1020 + 60)) ]);elseif (v115>84) then v112[v114[2]]=v112[v114[3]][v114[4]];else local v300=0;local v301;while true do if (v300==0) then v301=v114[2];v112[v301]=v112[v301](v21(v112,v301 + 1 ,v107));break;end end end elseif (v115<=91) then if (v115<=88) then if (v115<=(1509 -(630 + 793))) then v112[v114[2]]= #v112[v114[3]];elseif (v115>87) then local v302=0;local v303;while true do if (0==v302) then v303=v114[2];v112[v303](v112[v303 + 1 ]);break;end end else v112[v114[2]]=v112[v114[9 -6 ]];end elseif (v115<=(421 -332)) then if (v112[v114[1 + 1 ]]<=v112[v114[4]]) then v106=v106 + 1 ;else v106=v114[3];end elseif (v115==90) then local v307=0;local v308;while true do if (v307==0) then v308=v114[2];v112[v308]=v112[v308](v21(v112,v308 + 1 ,v107));break;end end else local v309=v114[2];do return v112[v309](v21(v112,v309 + 1 ,v114[3]));end end elseif (v115<=94) then if (v115<=(316 -224)) then local v189=0;local v190;while true do if (v189==0) then v190=v114[2];v112[v190]=v112[v190](v21(v112,v190 + 1 ,v114[3]));break;end end elseif (v115>93) then v112[v114[2]]=v75[v114[3]];else do return;end end elseif (v115<=96) then if (v115>95) then v112[v114[2]]=v75[v114[3]];else local v314=0;local v315;local v316;local v317;local v318;while true do if (v314==1) then v107=(v317 + v315) -1 ;v318=0;v314=2;end if (v314==0) then v315=v114[2];v316,v317=v105(v112[v315](v21(v112,v315 + 1 ,v114[3])));v314=1;end if (v314==2) then for v433=v315,v107 do local v434=0;while true do if (v434==0) then v318=v318 + 1 ;v112[v433]=v316[v318];break;end end end break;end end end elseif (v115>97) then local v319=v114[1749 -(760 + 987) ];do return v21(v112,v319,v107);end elseif (v112[v114[2]]<=v112[v114[4]]) then v106=v106 + 1 ;else v106=v114[3];end v106=v106 + 1 ;break;end end end end;end if (0==v76) then v77=v73[1];v78=v73[2];v76=1;end end end return v40(v39(),{},v28)(...);end vv17(),...);
